class Translator{static URI_PREFIX_LIST=["","http://www.","https://www.","http://","https://","tel:","mailto:","ftp://anonymous:anonymous@","ftp://ftp.","ftps://","sftp://","smb://","nfs://","ftp://","dav://","news:","telnet://","imap:","rtsp://","urn:","pop:","sip:","sips:","tftp:","btspp://","btl2cap://","btgoep://","tcpobex://","irdaobex://","file://","urn:epc:id:","urn:epc:tag:","urn:epc:pat:","urn:epc:raw:","urn:epc:","urn:nfc:"];static WEB_TO_NATIVE_TNF={empty:0,text:1,url:1,mime:2,external:4};static WEB_TO_NATIVE_TYPE={text:"T",url:"U"};static NATIVE_TO_WEB_TNF={1:{T:"text",U:"url"},2:"mime"};static getWebfromNativeNDEFRecord(e,r,t,a){let o,n,d,i,c,s,l=new TextDecoder;switch(o=t,e){case 1:n=this.NATIVE_TO_WEB_TNF[e][l.decode(r)];break;case 4:n=l.decode(r);break;default:n=this.NATIVE_TO_WEB_TNF[e]}if(null==n)throw TypeError("TypeNameFormat "+e+" with Type "+r+" not supported from nfc_manager_web");if(2==e&&(d=l.decode(r)),null!=a)switch(n){case"text":c="utf-8";var p=a.slice(0,1)[0];s=l.decode(a.slice(1,1+p)),i=l.decode(a.slice(1+p));break;case"url":i=(Translator.URI_PREFIX_LIST[a.slice(0,1)]??"")+l.decode(a.slice(1));break;default:i=a}return{recordType:n,mediaType:d,id:o,data:i,encoding:c,lang:s}}static getNativefromWebNDEFRecord(r){let e=new TextEncoder,t,a,o,n;a=r.id,o=new Uint8Array(r.data.byteLength);for(let e=0;e<o.length;e++)o[e]=r.data.getUint8(e);if(t=this.WEB_TO_NATIVE_TNF[r.recordType],null==t&&/^(\w+):(\w+)$/.test(r.recordType)&&(t=3),null==t)throw TypeError("RecordType "+r.recordType+" not supported from nfc_manager_web");if(2!=t&&null!=r.mediaType)throw TypeError("MediaType not allowed for this RecordType");switch(t){case 2:n=r.mediaType;break;case 3:null==n&&/^(\w+):(\w+)$/.test(r.recordType)&&(n=r.recordType);break;default:n=this.WEB_TO_NATIVE_TYPE[r.recordType]}if(null==n)throw TypeError("RecordType "+r.recordType+" not supported from nfc_manager_web");if(n=e.encode(n),null!=r.encoding&&"utf-8"!=r.encoding)throw TypeError("Encoding "+r.encoding+" not supported from nfc_manager_web");return{typeNameFormat:t,type:n,identifier:a,payload:o}}static getNativefromWebNDEFMessage(e){return{handle:null,ndef:{cachedMessage:{records:e}}}}static getNativeFromWebNDEFError(e){return{type:"webNfcError",message:e}}}var ndef,abortController=new AbortController;async function isNDEFReaderAvailable(){try{new NDEFReader;var e=await navigator.permissions.query({name:"nfc"});return"granted"==e.state||"prompt"==e.state}catch(e){return!1}}async function startNDEFReaderJS(){try{ndef=new NDEFReader}catch(e){return void raiseErrorEvent("Web-NFC is not available")}try{abortController=new AbortController,await ndef.scan({signal:abortController.signal}),ndef.onreadingerror=e=>raiseErrorEvent("Error during NFC reading"),ndef.onreading=r=>{try{var t=r.message.records;let e=[];for(recordIdx in t){var a=Translator.getNativefromWebNDEFRecord(t[recordIdx]);e.push(a)}var o=Translator.getNativefromWebNDEFMessage(e),n=new CustomEvent("readSuccessJS",{detail:o});return void document.dispatchEvent(n)}catch(e){raiseErrorEvent(e.message)}}}catch(e){raiseErrorEvent(e.message)}}async function startNDEFWriterJS(r){try{let e=[];for(recordIdx in r){var t=Translator.getWebfromNativeNDEFRecord(r[recordIdx].typeNameFormat,r[recordIdx].type,r[recordIdx].identifier,r[recordIdx].payload);e.push(t)}await(ndef=new NDEFReader).write({records:e})}catch(e){console.log(e)}}function stopNDEFReaderJS(){return abortController.abort()}function raiseErrorEvent(e){e=Translator.getNativeFromWebNDEFError(e),e=new CustomEvent("readErrorJS",{detail:e});document.dispatchEvent(e)}var NdefRecord=function(e,r,t,a){this.typeNameFormat=e,this.type=r,this.identifier=t,this.payload=a};